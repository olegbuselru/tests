import streamlit as st
import calendar
from datetime import datetime, date
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ö–∞–ª–µ–Ω–¥–∞—Ä—å 2025",
    page_icon="üìÖ",
    layout="wide"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'selected_date' not in st.session_state:
    st.session_state.selected_date = None

# –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ CSS —Å—Ç–∏–ª–∏
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600&display=swap');
    
    * {
        font-family: 'JetBrains Mono', monospace;
    }
    
    .pixel-header {
        background: #1a1a1a;
        color: #00ff00;
        padding: 2rem;
        text-align: center;
        border: 3px solid #00ff00;
        margin-bottom: 2rem;
        box-shadow: 5px 5px 0px #00ff00;
    }
    
    .pixel-header h1 {
        font-size: 2.5rem;
        margin: 0;
        text-shadow: 2px 2px 0px #000;
    }
    
    .pixel-header p {
        font-size: 1rem;
        margin: 1rem 0 0 0;
        opacity: 0.8;
    }
    
    .pixel-container {
        background: #000;
        border: 2px solid #00ff00;
        padding: 1.5rem;
        margin: 1rem 0;
        box-shadow: 3px 3px 0px #00ff00;
    }
    
    .pixel-month-header {
        background: #00ff00;
        color: #000;
        padding: 1rem;
        text-align: center;
        font-weight: bold;
        font-size: 1.2rem;
        border: 2px solid #000;
        margin-bottom: 1rem;
    }
    
    .pixel-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 2px;
        margin-top: 1rem;
    }
    
    .pixel-day {
        background: #1a1a1a;
        color: #00ff00;
        padding: 0.8rem 0.5rem;
        text-align: center;
        border: 1px solid #00ff00;
        cursor: pointer;
        font-weight: 500;
        min-height: 60px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
    }
    
    .pixel-day:hover {
        background: #00ff00;
        color: #000;
        transform: scale(1.05);
    }
    
    .pixel-day.selected {
        background: #ff0000;
        color: #fff;
        border: 2px solid #fff;
    }
    
    .pixel-weekday {
        background: #333;
        color: #00ff00;
        padding: 0.8rem 0.5rem;
        text-align: center;
        font-weight: bold;
        border: 1px solid #00ff00;
        font-size: 0.9rem;
    }
    
    .pixel-today {
        background: #00ff00;
        color: #000;
        font-weight: bold;
        border: 2px solid #fff;
    }
    
    .pixel-holiday {
        background: #ff0000;
        color: #fff;
        font-weight: bold;
    }
    
    .pixel-weekend {
        background: #1a1a1a;
        color: #0080ff;
        border: 1px solid #0080ff;
    }
    
    .pixel-other-month {
        color: #666;
        background: #0a0a0a;
        border: 1px solid #333;
    }
    
    .pixel-controls {
        background: #1a1a1a;
        border: 2px solid #00ff00;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 3px 3px 0px #00ff00;
    }
    
    .pixel-stats {
        background: #1a1a1a;
        border: 2px solid #00ff00;
        padding: 2rem;
        margin-top: 2rem;
        box-shadow: 3px 3px 0px #00ff00;
    }
    
    .pixel-stats h3 {
        color: #00ff00;
        text-align: center;
        margin-bottom: 1.5rem;
        font-size: 1.5rem;
    }
    
    .pixel-stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }
    
    .pixel-stat-item {
        background: #000;
        border: 1px solid #00ff00;
        padding: 1rem;
        text-align: center;
    }
    
    .pixel-stat-item h4 {
        color: #00ff00;
        margin: 0 0 0.5rem 0;
        font-size: 1rem;
    }
    
    .pixel-stat-item p {
        color: #fff;
        margin: 0;
        font-size: 1.2rem;
        font-weight: bold;
    }
    
    .pixel-legend {
        background: #1a1a1a;
        border: 2px solid #00ff00;
        padding: 1.5rem;
        margin-top: 2rem;
        box-shadow: 3px 3px 0px #00ff00;
    }
    
    .pixel-legend h4 {
        color: #00ff00;
        margin-bottom: 1rem;
        font-size: 1.2rem;
    }
    
    .pixel-legend-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 0.5rem;
    }
    
    .pixel-legend-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem;
        background: #000;
        border: 1px solid #00ff00;
    }
    
    .pixel-legend-color {
        width: 20px;
        height: 20px;
        border: 1px solid #00ff00;
    }
    
    .pixel-legend-color.today { background: #00ff00; }
    .pixel-legend-color.holiday { background: #ff0000; }
    .pixel-legend-color.weekend { background: #0080ff; }
    .pixel-legend-color.normal { background: #1a1a1a; }
    .pixel-legend-color.selected { background: #ff0000; }
    
    .pixel-legend-item span {
        color: #00ff00;
        font-size: 0.9rem;
    }
    
    .pixel-info {
        background: #1a1a1a;
        border: 2px solid #00ff00;
        padding: 1rem;
        margin-top: 1rem;
        box-shadow: 3px 3px 0px #00ff00;
    }
    
    .pixel-info h4 {
        color: #00ff00;
        margin: 0 0 0.5rem 0;
    }
    
    .pixel-info p {
        color: #fff;
        margin: 0;
        font-size: 0.9rem;
    }
    
    @media (max-width: 768px) {
        .pixel-grid {
            gap: 1px;
        }
        
        .pixel-day {
            padding: 0.5rem 0.25rem;
            min-height: 50px;
            font-size: 0.9rem;
        }
        
        .pixel-header h1 {
            font-size: 2rem;
        }
    }
</style>
""", unsafe_allow_html=True)

def get_holidays(year, month):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –¥–ª—è –º–µ—Å—è—Ü–∞"""
    holidays = {
        1: [1, 7],  # –ù–æ–≤—ã–π –≥–æ–¥, –†–æ–∂–¥–µ—Å—Ç–≤–æ
        2: [23],    # –î–µ–Ω—å –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞
        3: [8],     # –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å
        5: [1, 9],  # –î–µ–Ω—å —Ç—Ä—É–¥–∞, –î–µ–Ω—å –ü–æ–±–µ–¥—ã
        6: [12],    # –î–µ–Ω—å –†–æ—Å—Å–∏–∏
        11: [4],    # –î–µ–Ω—å –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –µ–¥–∏–Ω—Å—Ç–≤–∞
        12: [31]    # –ù–æ–≤—ã–π –≥–æ–¥
    }
    return holidays.get(month, [])

def get_lunar_phase(day):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–∑—É –ª—É–Ω—ã –¥–ª—è –¥–Ω—è"""
    phases = ["üåë", "üåí", "üåì", "üåî", "üåï", "üåñ", "üåó", "üåò"]
    return phases[day % 8]

def get_weather_icon(day):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –ø–æ–≥–æ–¥—ã"""
    weather = ["‚òÄÔ∏è", "‚õÖ", "üå§Ô∏è", "üå•Ô∏è", "‚òÅÔ∏è", "üå¶Ô∏è", "üåßÔ∏è", "‚õàÔ∏è"]
    return weather[day % len(weather)]

def get_zodiac_sign(month, day):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞"""
    zodiac_signs = [
        (1, 20, "‚ôí"), (2, 19, "‚ôì"), (3, 21, "‚ôà"),
        (4, 20, "‚ôâ"), (5, 21, "‚ôä"), (6, 21, "‚ôã"),
        (7, 23, "‚ôå"), (8, 23, "‚ôç"), (9, 23, "‚ôé"),
        (10, 23, "‚ôè"), (11, 22, "‚ôê"), (12, 22, "‚ôë")
    ]
    
    for i, (start_month, start_day, sign) in enumerate(zodiac_signs):
        next_month, next_day, _ = zodiac_signs[(i + 1) % 12]
        if (month == start_month and day >= start_day) or (month == next_month and day < next_day):
            return sign
    return "‚ôë"

def create_month_calendar_html(year, month):
    """–°–æ–∑–¥–∞–µ—Ç HTML –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –º–µ—Å—è—Ü–∞"""
    cal = calendar.monthcalendar(year, month)
    month_name = calendar.month_name[month]
    holidays = get_holidays(year, month)
    
    html = f"""
    <div class="pixel-container">
        <div class="pixel-month-header">
            {month_name} {year}
        </div>
        <div class="pixel-grid">
    """
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    weekdays = ['–ü–ù', '–í–¢', '–°–†', '–ß–¢', '–ü–¢', '–°–ë', '–í–°']
    for day in weekdays:
        html += f'<div class="pixel-weekday">{day}</div>'
    
    # –î–Ω–∏ –º–µ—Å—è—Ü–∞
    today = datetime.now()
    for week in cal:
        for day in week:
            if day == 0:
                html += '<div class="pixel-day pixel-other-month"></div>'
            else:
                day_classes = ["pixel-day"]
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º –¥–Ω–µ–º
                if year == today.year and month == today.month and day == today.day:
                    day_classes.append("pixel-today")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º
                if day in holidays:
                    day_classes.append("pixel-holiday")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –≤—ã—Ö–æ–¥–Ω—ã–º
                weekday = date(year, month, day).weekday()
                if weekday >= 5:
                    day_classes.append("pixel-weekend")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å
                if st.session_state.selected_date and st.session_state.selected_date == (year, month, day):
                    day_classes.append("selected")
                
                class_str = " ".join(day_classes)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏
                lunar_phase = get_lunar_phase(day)
                weather_icon = get_weather_icon(day)
                zodiac_sign = get_zodiac_sign(month, day)
                
                html += f'''
                <div class="{class_str}" onclick="selectDate({year}, {month}, {day})">
                    <div style="font-size: 1.1rem; font-weight: bold;">{day}</div>
                    <div style="font-size: 0.7rem; margin-top: 2px;">{lunar_phase}</div>
                    <div style="font-size: 0.7rem;">{weather_icon}</div>
                    <div style="font-size: 0.6rem; margin-top: 2px;">{zodiac_sign}</div>
                </div>
                '''
    
    html += "</div></div>"
    return html

def create_year_calendar_html(year):
    """–°–æ–∑–¥–∞–µ—Ç HTML –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—Å–µ–≥–æ –≥–æ–¥–∞"""
    html = ""
    for month in range(1, 13):
        html += create_month_calendar_html(year, month)
    return html

# –ü—Ä–æ—Å—Ç–æ–π JavaScript
st.markdown("""
<script>
function selectDate(year, month, day) {
    console.log('Selected:', year, month, day);
    // –ü—Ä–æ—Å—Ç–æ–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
    event.target.style.transform = 'scale(1.1)';
    setTimeout(() => {
        event.target.style.transform = 'scale(1)';
    }, 200);
}
</script>
""", unsafe_allow_html=True)

# –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown("""
<div class="pixel-header">
    <h1>üìÖ –ö–ê–õ–ï–ù–î–ê–†–¨ 2025</h1>
    <p>PIXEL EDITION - –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ —Å—Ç–∏–ª–µ —Ä–µ—Ç—Ä–æ</p>
</div>
""", unsafe_allow_html=True)

# –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
with st.container():
    st.markdown('<div class="pixel-controls">', unsafe_allow_html=True)
    
    col1, col2 = st.columns([3, 1])
    
    with col1:
        option = st.radio("–ß—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å?", ["–í–µ—Å—å –≥–æ–¥", "–û–¥–∏–Ω –º–µ—Å—è—Ü"])
    
    with col2:
        if st.button("üé≤ –°–ª—É—á–∞–π–Ω—ã–π –º–µ—Å—è—Ü"):
            random_month = random.randint(1, 12)
            st.session_state.random_month = random_month
    
    st.markdown('</div>', unsafe_allow_html=True)

year = 2025

if option == "–í–µ—Å—å –≥–æ–¥":
    st.markdown(create_year_calendar_html(year), unsafe_allow_html=True)

elif option == "–û–¥–∏–Ω –º–µ—Å—è—Ü":
    month = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü", 
                        list(range(1, 13)), 
                        format_func=lambda x: calendar.month_name[x],
                        index=getattr(st.session_state, 'random_month', 0) - 1)
    
    st.markdown(create_month_calendar_html(year, month), unsafe_allow_html=True)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–¥–∞
st.markdown("""
<div class="pixel-stats">
    <h3>üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê 2025</h3>
    <div class="pixel-stats-grid">
        <div class="pixel-stat-item">
            <h4>üìÖ –î–Ω–µ–π</h4>
            <p>365</p>
        </div>
        <div class="pixel-stat-item">
            <h4>üéØ –ì–æ–¥</h4>
            <p>2025</p>
        </div>
        <div class="pixel-stat-item">
            <h4>üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏</h4>
            <p>8</p>
        </div>
        <div class="pixel-stat-item">
            <h4>üåô –§–∞–∑—ã –ª—É–Ω—ã</h4>
            <p>12</p>
        </div>
        <div class="pixel-stat-item">
            <h4>üå§Ô∏è –ü–æ–≥–æ–¥–∞</h4>
            <p>365</p>
        </div>
        <div class="pixel-stat-item">
            <h4>‚ôà –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞</h4>
            <p>12</p>
        </div>
    </div>
</div>
""", unsafe_allow_html=True)

# –õ–µ–≥–µ–Ω–¥–∞
st.markdown("""
<div class="pixel-legend">
    <h4>üé® –õ–ï–ì–ï–ù–î–ê</h4>
    <div class="pixel-legend-grid">
        <div class="pixel-legend-item">
            <div class="pixel-legend-color today"></div>
            <span>üéØ –°–µ–≥–æ–¥–Ω—è</span>
        </div>
        <div class="pixel-legend-item">
            <div class="pixel-legend-color holiday"></div>
            <span>üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏</span>
        </div>
        <div class="pixel-legend-item">
            <div class="pixel-legend-color weekend"></div>
            <span>üåÖ –í—ã—Ö–æ–¥–Ω—ã–µ</span>
        </div>
        <div class="pixel-legend-item">
            <div class="pixel-legend-color normal"></div>
            <span>üìÖ –û–±—ã—á–Ω—ã–µ –¥–Ω–∏</span>
        </div>
        <div class="pixel-legend-item">
            <div class="pixel-legend-color selected"></div>
            <span>üéØ –í—ã–±—Ä–∞–Ω–Ω—ã–π</span>
        </div>
    </div>
</div>
""", unsafe_allow_html=True)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç–µ
if st.session_state.selected_date:
    year, month, day = st.session_state.selected_date
    zodiac_sign = get_zodiac_sign(month, day)
    
    st.markdown(f"""
    <div class="pixel-info">
        <h4>üìÖ –í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞: {day} {calendar.month_name[month]} {year}</h4>
        <p>üåô –§–∞–∑–∞ –ª—É–Ω—ã: {get_lunar_phase(day)} | üå§Ô∏è –ü–æ–≥–æ–¥–∞: {get_weather_icon(day)} | {zodiac_sign}</p>
    </div>
    """, unsafe_allow_html=True)

# –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
st.success("‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–≥—Ä—É–∂–µ–Ω!")
st.info("üéÆ –ü–∏–∫—Å–µ–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")


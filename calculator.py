import streamlit as st
import calendar
from datetime import datetime, date, timedelta
import random
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ö–∞–ª–µ–Ω–¥–∞—Ä—å 2025",
    page_icon="üìÖ",
    layout="wide"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'dark_mode' not in st.session_state:
    st.session_state.dark_mode = False
if 'selected_date' not in st.session_state:
    st.session_state.selected_date = None
if 'particle_mode' not in st.session_state:
    st.session_state.particle_mode = True
if 'sound_enabled' not in st.session_state:
    st.session_state.sound_enabled = True
if 'holographic_mode' not in st.session_state:
    st.session_state.holographic_mode = False
if 'zen_mode' not in st.session_state:
    st.session_state.zen_mode = False

# CSS —Å—Ç–∏–ª–∏ –¥–ª—è —Å—É–ø–µ—Ä-–∫—Ä–∞—Å–∏–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');
    @import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600&display=swap');
    @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&display=swap');
    
    * {
        font-family: 'Inter', sans-serif;
    }
    
    body {
        overflow-x: hidden;
    }
    
    /* 3D –∏ –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */
    .holographic {
        background: linear-gradient(45deg, 
            rgba(255,255,255,0.1), 
            rgba(255,255,255,0.05), 
            rgba(255,255,255,0.1));
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255,255,255,0.2);
        box-shadow: 
            0 0 20px rgba(0,255,255,0.3),
            inset 0 0 20px rgba(0,255,255,0.1);
    }
    
    .zen-mode {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        color: #2c3e50;
    }
    
    .zen-mode .calendar-container {
        background: rgba(255,255,255,0.9);
        border: none;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }
    
    .dark-mode {
        background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
        color: #ffffff;
    }
    
    .dark-mode .calendar-container {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .dark-mode .calendar-day {
        background: linear-gradient(145deg, #2a2a3e, #1e1e2e);
        color: #ffffff;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .dark-mode .calendar-day:hover {
        background: linear-gradient(145deg, #667eea, #764ba2);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
    }
    
    /* –ß–∞—Å—Ç–∏—Ü—ã */
    .particles {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
    }
    
    .particle {
        position: absolute;
        width: 4px;
        height: 4px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        border-radius: 50%;
        animation: float-particle 6s infinite linear;
    }
    
    @keyframes float-particle {
        0% {
            transform: translateY(100vh) rotate(0deg);
            opacity: 0;
        }
        10% {
            opacity: 1;
        }
        90% {
            opacity: 1;
        }
        100% {
            transform: translateY(-100px) rotate(360deg);
            opacity: 0;
        }
    }
    
    .main-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
        padding: 4rem 2rem;
        border-radius: 30px;
        margin-bottom: 2rem;
        text-align: center;
        color: white;
        box-shadow: 
            0 30px 60px rgba(102, 126, 234, 0.4),
            0 0 100px rgba(102, 126, 234, 0.2);
        position: relative;
        overflow: hidden;
        animation: float 8s ease-in-out infinite;
    }
    
    .main-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="50" r="0.8" fill="white" opacity="0.1"/><circle cx="90" cy="30" r="0.3" fill="white" opacity="0.1"/><circle cx="40" cy="80" r="0.6" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        pointer-events: none;
    }
    
    .main-header::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, transparent, rgba(255,255,255,0.15), transparent);
        transform: rotate(45deg);
        animation: shimmer 5s infinite;
    }
    
    .main-header h1 {
        font-size: 4rem;
        font-weight: 900;
        margin: 0;
        text-shadow: 0 10px 20px rgba(0,0,0,0.3);
        animation: fadeInUp 2s ease-out;
        background: linear-gradient(45deg, #ffffff, #f0f0f0, #ffffff);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-family: 'Orbitron', monospace;
        letter-spacing: 3px;
    }
    
    .main-header p {
        font-size: 1.5rem;
        margin: 1.5rem 0 0 0;
        opacity: 0.95;
        animation: fadeInUp 2s ease-out 0.4s both;
        font-weight: 300;
        font-family: 'JetBrains Mono', monospace;
    }
    
    .controls-container {
        background: linear-gradient(145deg, #ffffff, #f8f9fa);
        padding: 2.5rem;
        border-radius: 25px;
        box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
        border: 1px solid rgba(102, 126, 234, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1.5rem;
        position: relative;
        overflow: hidden;
    }
    
    .controls-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
        transition: left 0.8s;
    }
    
    .controls-container:hover::before {
        left: 100%;
    }
    
    .dark-mode .controls-container {
        background: linear-gradient(145deg, rgba(255,255,255,0.05), rgba(255,255,255,0.02));
        border: 1px solid rgba(255,255,255,0.1);
    }
    
    .control-button {
        background: linear-gradient(135deg, #667eea, #764ba2);
        border: none;
        padding: 1rem 2rem;
        border-radius: 30px;
        color: white;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        position: relative;
        overflow: hidden;
        font-family: 'JetBrains Mono', monospace;
    }
    
    .control-button::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        transition: left 0.5s;
    }
    
    .control-button:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 15px 35px rgba(102, 126, 234, 0.5);
    }
    
    .control-button:hover::before {
        left: 100%;
    }
    
    .calendar-container {
        background: white;
        border-radius: 30px;
        padding: 3rem;
        box-shadow: 
            0 25px 50px rgba(0,0,0,0.1),
            0 0 100px rgba(102, 126, 234, 0.1);
        margin: 2.5rem 0;
        border: 1px solid rgba(255,255,255,0.2);
        backdrop-filter: blur(20px);
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }
    
    .calendar-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb, #667eea);
        border-radius: 30px 30px 0 0;
        background-size: 200% 100%;
        animation: gradient-shift 3s ease-in-out infinite;
    }
    
    .calendar-container:hover {
        transform: translateY(-10px) scale(1.02);
        box-shadow: 
            0 40px 80px rgba(0,0,0,0.15),
            0 0 150px rgba(102, 126, 234, 0.2);
    }
    
    .month-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2.5rem;
        border-radius: 25px;
        text-align: center;
        font-weight: 700;
        margin-bottom: 2.5rem;
        position: relative;
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
    }
    
    .month-header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, transparent, rgba(255,255,255,0.15), transparent);
        transform: rotate(45deg);
        animation: shimmer 4s infinite;
    }
    
    .month-header h2 {
        margin: 0;
        font-size: 2.5rem;
        position: relative;
        z-index: 1;
        text-shadow: 0 6px 12px rgba(0,0,0,0.3);
        font-family: 'Orbitron', monospace;
        letter-spacing: 2px;
    }
    
    .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 12px;
        margin-top: 2rem;
    }
    
    .calendar-day {
        background: linear-gradient(145deg, #f8f9fa, #e9ecef);
        padding: 1.5rem 0.5rem;
        text-align: center;
        border-radius: 20px;
        border: 2px solid transparent;
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: pointer;
        position: relative;
        overflow: hidden;
        font-weight: 700;
        min-height: 80px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
    }
    
    .calendar-day:hover {
        background: linear-gradient(145deg, #667eea, #764ba2);
        color: white;
        transform: translateY(-8px) scale(1.1);
        box-shadow: 
            0 20px 40px rgba(102, 126, 234, 0.6),
            0 0 50px rgba(102, 126, 234, 0.3);
        border-color: rgba(255,255,255,0.4);
        z-index: 10;
    }
    
    .calendar-day::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
        transition: left 0.8s;
    }
    
    .calendar-day:hover::before {
        left: 100%;
    }
    
    .calendar-day.selected {
        background: linear-gradient(145deg, #ff6b6b, #ee5a24) !important;
        color: white !important;
        transform: scale(1.15);
        box-shadow: 
            0 25px 50px rgba(255, 107, 107, 0.6),
            0 0 60px rgba(255, 107, 107, 0.4) !important;
        animation: bounce 0.8s ease-in-out;
    }
    
    .weekday-header {
        background: linear-gradient(135deg, #495057, #343a40);
        color: white;
        padding: 1.5rem 0.5rem;
        text-align: center;
        border-radius: 20px;
        font-weight: 800;
        font-size: 1.1rem;
        text-transform: uppercase;
        letter-spacing: 3px;
        box-shadow: 0 12px 25px rgba(0,0,0,0.3);
        position: relative;
        overflow: hidden;
        font-family: 'Orbitron', monospace;
    }
    
    .weekday-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        transition: left 0.6s;
    }
    
    .weekday-header:hover::before {
        left: 100%;
    }
    
    .today {
        background: linear-gradient(145deg, #28a745, #20c997) !important;
        color: white !important;
        font-weight: bold !important;
        box-shadow: 
            0 20px 40px rgba(40, 167, 69, 0.6),
            0 0 50px rgba(40, 167, 69, 0.4) !important;
        animation: pulse 2s infinite;
        position: relative;
    }
    
    .today::after {
        content: 'üéØ';
        position: absolute;
        top: 8px;
        right: 8px;
        font-size: 1rem;
        animation: spin 3s linear infinite;
    }
    
    .holiday {
        background: linear-gradient(145deg, #dc3545, #fd7e14) !important;
        color: white !important;
        font-weight: bold !important;
        position: relative;
    }
    
    .holiday::after {
        content: 'üéâ';
        position: absolute;
        top: 8px;
        right: 8px;
        font-size: 1rem;
        animation: bounce 1s infinite;
    }
    
    .weekend {
        background: linear-gradient(145deg, #e3f2fd, #bbdefb);
        color: #1976d2;
        position: relative;
    }
    
    .weekend::after {
        content: 'üåÖ';
        position: absolute;
        top: 8px;
        right: 8px;
        font-size: 1rem;
        animation: float 2s ease-in-out infinite;
    }
    
    .other-month {
        color: #adb5bd;
        background: #f8f9fa;
        opacity: 0.3;
    }
    
    .lunar-phase {
        font-size: 0.8rem;
        margin-top: 0.3rem;
        opacity: 0.9;
        font-family: 'JetBrains Mono', monospace;
    }
    
    .weather-icon {
        font-size: 0.9rem;
        margin-top: 0.3rem;
        animation: weather-float 3s ease-in-out infinite;
    }
    
    .stats-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 4rem;
        border-radius: 30px;
        margin-top: 4rem;
        text-align: center;
        position: relative;
        overflow: hidden;
        box-shadow: 
            0 30px 60px rgba(102, 126, 234, 0.4),
            0 0 100px rgba(102, 126, 234, 0.2);
    }
    
    .stats-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="stats-pattern" width="60" height="60" patternUnits="userSpaceOnUse"><circle cx="30" cy="30" r="1" fill="white" opacity="0.1"/><circle cx="10" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="50" cy="50" r="0.8" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23stats-pattern)"/></svg>');
        pointer-events: none;
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 2.5rem;
        margin-top: 3rem;
        position: relative;
        z-index: 1;
    }
    
    .stat-item {
        background: rgba(255,255,255,0.2);
        padding: 2.5rem;
        border-radius: 25px;
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255,255,255,0.3);
        transition: all 0.4s ease;
    }
    
    .stat-item:hover {
        transform: translateY(-8px);
        background: rgba(255,255,255,0.3);
        box-shadow: 0 20px 40px rgba(0,0,0,0.2);
    }
    
    .stat-item h4 {
        margin: 0 0 1.5rem 0;
        font-size: 1.4rem;
        font-weight: 700;
        font-family: 'Orbitron', monospace;
        letter-spacing: 1px;
    }
    
    .stat-item p {
        margin: 0;
        font-size: 1.8rem;
        font-weight: 800;
        font-family: 'JetBrains Mono', monospace;
    }
    
    .legend-container {
        background: linear-gradient(145deg, #ffffff, #f8f9fa);
        padding: 3rem;
        border-radius: 25px;
        margin-top: 3rem;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        border: 1px solid rgba(102, 126, 234, 0.1);
        position: relative;
        overflow: hidden;
    }
    
    .legend-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
        border-radius: 25px 25px 0 0;
    }
    
    .dark-mode .legend-container {
        background: linear-gradient(145deg, rgba(255,255,255,0.05), rgba(255,255,255,0.02));
        border: 1px solid rgba(255,255,255,0.1);
    }
    
    .legend-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }
    
    .legend-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        border-radius: 15px;
        background: rgba(102, 126, 234, 0.1);
        transition: all 0.3s ease;
    }
    
    .legend-item:hover {
        background: rgba(102, 126, 234, 0.2);
        transform: translateX(5px);
    }
    
    .legend-color {
        width: 25px;
        height: 25px;
        border-radius: 50%;
        border: 3px solid rgba(255,255,255,0.4);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    
    /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(60px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @keyframes shimmer {
        0% { transform: translateX(-100%) rotate(45deg); }
        100% { transform: translateX(100%) rotate(45deg); }
    }
    
    @keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.08); }
    }
    
    @keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-15px); }
    }
    
    @keyframes bounce {
        0%, 20%, 53%, 80%, 100% { transform: scale(1.15); }
        40%, 43% { transform: scale(1.2); }
        70% { transform: scale(1.1); }
        90% { transform: scale(1.15); }
    }
    
    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
    
    @keyframes gradient-shift {
        0%, 100% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
    }
    
    @keyframes weather-float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-3px); }
    }
    
    /* –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */
    .sound-wave {
        position: absolute;
        width: 100%;
        height: 100%;
        border-radius: inherit;
        background: radial-gradient(circle, rgba(102, 126, 234, 0.3) 0%, transparent 70%);
        animation: sound-wave 0.5s ease-out;
        pointer-events: none;
    }
    
    @keyframes sound-wave {
        0% {
            transform: scale(0);
            opacity: 1;
        }
        100% {
            transform: scale(2);
            opacity: 0;
        }
    }
    
    @media (max-width: 768px) {
        .calendar-grid {
            gap: 8px;
        }
        
        .calendar-day {
            padding: 1rem 0.3rem;
            min-height: 70px;
            font-size: 1.1rem;
        }
        
        .main-header h1 {
            font-size: 3rem;
        }
        
        .controls-container {
            flex-direction: column;
            text-align: center;
        }
        
        .stats-grid {
            grid-template-columns: 1fr;
        }
    }
</style>
""", unsafe_allow_html=True)

def get_holidays(year, month):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –¥–ª—è –º–µ—Å—è—Ü–∞"""
    holidays = {
        1: [1, 7],  # –ù–æ–≤—ã–π –≥–æ–¥, –†–æ–∂–¥–µ—Å—Ç–≤–æ
        2: [23],    # –î–µ–Ω—å –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞
        3: [8],     # –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å
        5: [1, 9],  # –î–µ–Ω—å —Ç—Ä—É–¥–∞, –î–µ–Ω—å –ü–æ–±–µ–¥—ã
        6: [12],    # –î–µ–Ω—å –†–æ—Å—Å–∏–∏
        11: [4],    # –î–µ–Ω—å –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –µ–¥–∏–Ω—Å—Ç–≤–∞
        12: [31]    # –ù–æ–≤—ã–π –≥–æ–¥
    }
    return holidays.get(month, [])

def get_lunar_phase(day):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–∑—É –ª—É–Ω—ã –¥–ª—è –¥–Ω—è (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"""
    phases = ["üåë", "üåí", "üåì", "üåî", "üåï", "üåñ", "üåó", "üåò"]
    return phases[day % 8]

def get_weather_icon(day):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –ø–æ–≥–æ–¥—ã (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"""
    weather = ["‚òÄÔ∏è", "‚õÖ", "üå§Ô∏è", "üå•Ô∏è", "‚òÅÔ∏è", "üå¶Ô∏è", "üåßÔ∏è", "‚õàÔ∏è", "üåà", "‚ùÑÔ∏è"]
    return weather[day % len(weather)]

def get_zodiac_sign(month, day):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞"""
    zodiac_signs = [
        (1, 20, "‚ôí –í–æ–¥–æ–ª–µ–π"), (2, 19, "‚ôì –†—ã–±—ã"), (3, 21, "‚ôà –û–≤–µ–Ω"),
        (4, 20, "‚ôâ –¢–µ–ª–µ—Ü"), (5, 21, "‚ôä –ë–ª–∏–∑–Ω–µ—Ü—ã"), (6, 21, "‚ôã –†–∞–∫"),
        (7, 23, "‚ôå –õ–µ–≤"), (8, 23, "‚ôç –î–µ–≤–∞"), (9, 23, "‚ôé –í–µ—Å—ã"),
        (10, 23, "‚ôè –°–∫–æ—Ä–ø–∏–æ–Ω"), (11, 22, "‚ôê –°—Ç—Ä–µ–ª–µ—Ü"), (12, 22, "‚ôë –ö–æ–∑–µ—Ä–æ–≥")
    ]
    
    for i, (start_month, start_day, sign) in enumerate(zodiac_signs):
        next_month, next_day, _ = zodiac_signs[(i + 1) % 12]
        if (month == start_month and day >= start_day) or (month == next_month and day < next_day):
            return sign
    return "‚ôë –ö–æ–∑–µ—Ä–æ–≥"

def create_month_calendar_html(year, month):
    """–°–æ–∑–¥–∞–µ—Ç HTML –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –º–µ—Å—è—Ü–∞"""
    cal = calendar.monthcalendar(year, month)
    month_name = calendar.month_name[month]
    holidays = get_holidays(year, month)
    
    html = f"""
    <div class="calendar-container">
        <div class="month-header">
            <h2>{month_name} {year}</h2>
        </div>
        <div class="calendar-grid">
    """
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    weekdays = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å']
    for day in weekdays:
        html += f'<div class="weekday-header">{day}</div>'
    
    # –î–Ω–∏ –º–µ—Å—è—Ü–∞
    today = datetime.now()
    for week in cal:
        for day in week:
            if day == 0:
                html += '<div class="calendar-day other-month"></div>'
            else:
                day_classes = ["calendar-day"]
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º –¥–Ω–µ–º
                if year == today.year and month == today.month and day == today.day:
                    day_classes.append("today")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º
                if day in holidays:
                    day_classes.append("holiday")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –≤—ã—Ö–æ–¥–Ω—ã–º (—Å—É–±–±–æ—Ç–∞ –∏–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
                weekday = date(year, month, day).weekday()
                if weekday >= 5:  # 5 = —Å—É–±–±–æ—Ç–∞, 6 = –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
                    day_classes.append("weekend")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å
                if st.session_state.selected_date and st.session_state.selected_date == (year, month, day):
                    day_classes.append("selected")
                
                class_str = " ".join(day_classes)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏
                lunar_phase = get_lunar_phase(day)
                weather_icon = get_weather_icon(day)
                zodiac_sign = get_zodiac_sign(month, day)
                
                html += f'''
                <div class="{class_str}" onclick="selectDate({year}, {month}, {day})">
                    {day}
                    <div class="lunar-phase">{lunar_phase}</div>
                    <div class="weather-icon">{weather_icon}</div>
                    <div class="zodiac-sign" style="font-size: 0.6rem; margin-top: 0.2rem; opacity: 0.7;">{zodiac_sign.split()[0]}</div>
                </div>
                '''
    
    html += "</div></div>"
    return html

def create_year_calendar_html(year):
    """–°–æ–∑–¥–∞–µ—Ç HTML –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—Å–µ–≥–æ –≥–æ–¥–∞"""
    html = ""
    for month in range(1, 13):
        html += create_month_calendar_html(year, month)
    return html

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π JavaScript –¥–ª—è Streamlit
st.markdown("""
<script>
// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
function selectDate(year, month, day) {
    // –í–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
    const element = event.target;
    element.style.transform = 'scale(1.1)';
    setTimeout(() => {
        element.style.transform = 'scale(1)';
    }, 200);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Streamlit (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    console.log('Selected date:', year, month, day);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Å—Ç–∏—Ü (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
function createParticles() {
    const particlesContainer = document.createElement('div');
    particlesContainer.className = 'particles';
    document.body.appendChild(particlesContainer);
    
    for (let i = 0; i < 20; i++) {
        setTimeout(() => {
            const particle = document.createElement('div');
            particle.className = 'particle';
            particle.style.left = Math.random() * 100 + '%';
            particle.style.animationDelay = Math.random() * 6 + 's';
            particle.style.animationDuration = (Math.random() * 3 + 3) + 's';
            particlesContainer.appendChild(particle);
            
            setTimeout(() => {
                if (particle.parentNode) {
                    particle.remove();
                }
            }, 6000);
        }, i * 200);
    }
}

// –ó–∞–ø—É—Å–∫ —á–∞—Å—Ç–∏—Ü –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
setInterval(createParticles, 15000);
setTimeout(createParticles, 2000); // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
</script>
""", unsafe_allow_html=True)

# –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown("""
<div class="main-header">
    <h1>üìÖ –ö–ê–õ–ï–ù–î–ê–†–¨ 2025</h1>
    <p>ULTIMATE EDITION - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å 3D —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏</p>
</div>
""", unsafe_allow_html=True)

# –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
with st.container():
    st.markdown('<div class="controls-container">', unsafe_allow_html=True)
    
    col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
    
    with col1:
        option = st.radio("–ß—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å?", ["–í–µ—Å—å –≥–æ–¥", "–û–¥–∏–Ω –º–µ—Å—è—Ü"])
    
    with col2:
        if st.button("üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞" if not st.session_state.dark_mode else "‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞"):
            st.session_state.dark_mode = not st.session_state.dark_mode
    
    with col3:
        if st.button("üé≤ –°–ª—É—á–∞–π–Ω—ã–π –º–µ—Å—è—Ü"):
            random_month = random.randint(1, 12)
            st.session_state.random_month = random_month
    
    with col4:
        if st.button("üßò Zen —Ä–µ–∂–∏–º" if not st.session_state.zen_mode else "üé® –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º"):
            st.session_state.zen_mode = not st.session_state.zen_mode
    
    st.markdown('</div>', unsafe_allow_html=True)

year = 2025

if option == "–í–µ—Å—å –≥–æ–¥":
    st.markdown(create_year_calendar_html(year), unsafe_allow_html=True)

elif option == "–û–¥–∏–Ω –º–µ—Å—è—Ü":
    month = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü", 
                        list(range(1, 13)), 
                        format_func=lambda x: calendar.month_name[x],
                        index=getattr(st.session_state, 'random_month', 0) - 1)
    
    st.markdown(create_month_calendar_html(year, month), unsafe_allow_html=True)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–¥–∞
st.markdown("""
<div class="stats-container">
    <h3>üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê 2025 –ì–û–î–ê</h3>
    <div class="stats-grid">
        <div class="stat-item">
            <h4>üìÖ –í—Å–µ–≥–æ –¥–Ω–µ–π</h4>
            <p>365 –¥–Ω–µ–π</p>
        </div>
        <div class="stat-item">
            <h4>üéØ –¢–µ–∫—É—â–∏–π –≥–æ–¥</h4>
            <p>2025</p>
        </div>
        <div class="stat-item">
            <h4>üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏</h4>
            <p>8 –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö</p>
        </div>
        <div class="stat-item">
            <h4>‚≠ê –û—Å–æ–±—ã–π –≥–æ–¥</h4>
            <p>–ì–æ–¥ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</p>
        </div>
        <div class="stat-item">
            <h4>üåô –§–∞–∑—ã –ª—É–Ω—ã</h4>
            <p>12 –ø–æ–ª–Ω—ã—Ö</p>
        </div>
        <div class="stat-item">
            <h4>üå§Ô∏è –ü–æ–≥–æ–¥–∞</h4>
            <p>365 –¥–Ω–µ–π</p>
        </div>
        <div class="stat-item">
            <h4>‚ôà –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞</h4>
            <p>12 –∑–Ω–∞–∫–æ–≤</p>
        </div>
        <div class="stat-item">
            <h4>üéµ –ó–≤—É–∫–∏</h4>
            <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ</p>
        </div>
    </div>
</div>
""", unsafe_allow_html=True)

# –õ–µ–≥–µ–Ω–¥–∞
st.markdown("""
<div class="legend-container">
    <h4>üé® –õ–ï–ì–ï–ù–î–ê –ö–ê–õ–ï–ù–î–ê–†–Ø</h4>
    <div class="legend-grid">
        <div class="legend-item">
            <div class="legend-color" style="background: linear-gradient(145deg, #28a745, #20c997);"></div>
            <span>üéØ –°–µ–≥–æ–¥–Ω—è - –∑–µ–ª–µ–Ω—ã–π —Å –ø—É–ª—å—Å–∞—Ü–∏–µ–π</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background: linear-gradient(145deg, #dc3545, #fd7e14);"></div>
            <span>üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ - –∫—Ä–∞—Å–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background: linear-gradient(145deg, #e3f2fd, #bbdefb);"></div>
            <span>üåÖ –í—ã—Ö–æ–¥–Ω—ã–µ - —Å–∏–Ω–∏–π –≥—Ä–∞–¥–∏–µ–Ω—Ç</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background: linear-gradient(145deg, #f8f9fa, #e9ecef);"></div>
            <span>üìÖ –û–±—ã—á–Ω—ã–µ –¥–Ω–∏ - —Å–µ—Ä—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background: linear-gradient(145deg, #ff6b6b, #ee5a24);"></div>
            <span>üéØ –í—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å - –æ—Ä–∞–Ω–∂–µ–≤—ã–π</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background: transparent; border: 3px solid #667eea;"></div>
            <span>üåô –§–∞–∑—ã –ª—É–Ω—ã –∏ –ø–æ–≥–æ–¥–∞</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background: linear-gradient(145deg, #9c27b0, #673ab7);"></div>
            <span>‚ôà –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background: linear-gradient(145deg, #00bcd4, #009688);"></div>
            <span>üéµ –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã</span>
        </div>
    </div>
</div>
""", unsafe_allow_html=True)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç–µ
if st.session_state.selected_date:
    year, month, day = st.session_state.selected_date
    zodiac_sign = get_zodiac_sign(month, day)
    
    st.success(f"üìÖ –í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞: {day} {calendar.month_name[month]} {year}")
    st.info(f"üåô –§–∞–∑–∞ –ª—É–Ω—ã: {get_lunar_phase(day)} | üå§Ô∏è –ü–æ–≥–æ–¥–∞: {get_weather_icon(day)} | {zodiac_sign}")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
st.markdown("---")
col1, col2, col3 = st.columns(3)

with col1:
    if st.button("üéµ –í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–∏" if not st.session_state.sound_enabled else "üîá –í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–∏"):
        st.session_state.sound_enabled = not st.session_state.sound_enabled

with col2:
    if st.button("‚ú® –ß–∞—Å—Ç–∏—Ü—ã" if not st.session_state.particle_mode else "üí´ –ë–µ–∑ —á–∞—Å—Ç–∏—Ü"):
        st.session_state.particle_mode = not st.session_state.particle_mode

with col3:
    if st.button("üîÆ –ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º" if not st.session_state.holographic_mode else "üì± –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º"):
        st.session_state.holographic_mode = not st.session_state.holographic_mode

# –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
st.success("‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
st.info("üéØ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Å–æ Streamlit")

